{"version":3,"sources":["images/test.png","ListItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ListItem","props","img","name","plus","id","replace","toLowerCase","hasImage","require","useEffect","el","document","getElementById","concat","imgEl","addEventListener","e","style","display","react_default","a","createElement","alt","src","className","App","title","getElementsByTagName","console","log","textContent","src_ListItem","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ea55c00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.e677534c.png\";","import React, { useEffect } from 'react';\n\nimport './ListItem.css';\n\nfunction ListItem(props) {\n  let img;\n  const { name, plus } = props;\n  const id = name\n    .replace(/'| &/g, '')\n    .replace(/\\/| /g, '-')\n    .toLowerCase();\n\n  const hasImage = !plus;\n\n  if (hasImage) {\n    img = require('./images/test.png');\n  }\n\n  useEffect(() => {\n    const el = document.getElementById(`el-${id}`);\n\n    if (hasImage) {\n      const imgEl = document.getElementById(id);\n\n      //todo: more logic\n      el.addEventListener(\"mousemove\", e => {\n        // imgEl.style.display = 'block';\n        // imgEl.style.left = `${e.clientX + 50}px`;\n        // imgEl.style.top = `${e.clientY}px`;\n      })\n\n      el.addEventListener(\"mouseout\", e => {\n        imgEl.style.display = 'none';\n      })\n    }\n  }, [id, hasImage]);\n\n  return (\n    <li>\n      {hasImage && <img alt={id} id={id} src={img} />}\n      <span id={`el-${id}`} className={plus && 'plus'}>\n        {name}\n      </span>\n    </li>\n  );\n}\n\nexport default ListItem;\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport ListItem from './ListItem';\n\n// const col = [\n//   '#6aba75',\n//   '#9ed8ff',\n//   '#d7b0ff',\n//   '#485ccf',\n//   '#ffd84a',\n// ]\n\nfunction App() {\n  useEffect(() => {\n    const title = document.getElementsByTagName('h1');\n    console.log(title[0].textContent)\n  }, []);\n\n  return (\n    <main>\n      <section>\n        <h1>When  in... <nobr><span>SEE</span>-attle</nobr></h1>\n      </section>\n      <section>\n        <h2>Food</h2>\n        {/*<p>i really miss some of these places</p>*/}\n        <ListItem name=\"Tavolata\" />\n        <ListItem name=\"Eden Hill\" />\n        <ListItem name=\"Mike's Noodle House\" />\n        <ListItem name=\"Il Corvo\" />\n        <ListItem name=\"Sushi Kashiba\" />\n        <ListItem name=\"Piroshky Piroshky\" />\n        <ListItem name=\"Sitka & Spruce\" />\n        <ListItem name=\"Lola\" />\n        <ListItem name=\"Ramen Danbo\" />\n        <ListItem name=\"The Pink Door\" />\n        <ListItem name=\"Din Tai Fung\" />\n        <ListItem name=\"General Porpoise Doughnuts\" />\n        <ListItem name=\"Frankie & Jo's\" />\n        <ListItem name=\"Rachel's Ginger Beer\" />\n        <ListItem name=\"Molly Moon's Homemade Ice Cream\" />\n        <ListItem name=\"The Walrus and the Carpenter\" />\n        <ListItem name=\"Westward\" />\n        <ListItem name=\"Shiro's Sushi\" />\n        <ListItem name=\"Old School Frozen Custard\" />\n\n        <p className=\"plus ad\">\n          see @<a href=\"https://instagram.com/ethannoms\" target=\"_blank\" rel=\"noopener noreferrer\">ethannoms</a> #ad\n        </p>\n\n      </section>\n\n      <section>\n        <h2>Cafes</h2>\n        <p>i don't remember going out for coffee as much as i do now but here's a short list, not a shortlist</p>\n        <ListItem name=\"La Marzocco Cafe\" plus />\n        <ListItem name=\"Ambrosia Cafe\" />\n        <ListItem name=\"The London Plane\" />\n        <ListItem name=\"Cherry Street Coffee House\" plus />\n        <ListItem name=\"Grand Central Bakery\" plus />\n        <ListItem name=\"Stumptown Coffee Roasters\" plus />\n        <ListItem name=\"Elm Coffee Roasters\" plus />\n        <ListItem name=\"Zeitgeist Coffee\" plus />\n        <ListItem name=\"Victrola Coffee Roasters\" plus />\n        <ListItem name=\"Caffe Ladro\" plus />\n        <ListItem name=\"Storyville Roasters\" plus />\n      </section>\n\n      <section>\n        <h2>Nature</h2>\n        <p>not much of a winter hiker but here's what i did</p>\n        <ListItem name=\"Lake 22\" />\n        <ListItem name=\"Rattlesnake Ledge\" plus />\n        <ListItem name=\"Discovery Park Loop Trail\" />\n        <ListItem name=\"Mount/Little Si\" />\n        <ListItem name=\"Washington Park Arboretum\" />\n      </section>\n\n      <section>\n        <h2>Art</h2>\n        <p>Seattle is all about glass and wood art and I am not a fan of either but here's some places that featured non-glass/wood exhibits</p>\n        <ListItem name=\"Frye Art Museum\" />\n        <ListItem name=\"Linda Hodges Gallery\" />\n        <ListItem name=\"Seattle Art Museum\" />\n        <ListItem name=\"Harris Harvey Gallery\" />\n        <ListItem name=\"Traver Gallery\" />\n        <ListItem name=\"Vetri Gallery\" />\n        <ListItem name=\"Davidson Galleries\" />\n      </section>\n\n      <section>\n        <h2>Stores</h2>\n        {/*<p>lots of fun and cool places around the city</p>*/}\n        <ListItem name=\"Totokaelo\" />\n        <ListItem name=\"Standard Goods\" />\n        <ListItem name=\"Glasswing Shop\" />\n        <ListItem name=\"Homestead Seattle\" />\n        <ListItem name=\"The Palm Room\" />\n        <ListItem name=\"Prism\" />\n        <ListItem name=\"Baby & Company\" />\n        <ListItem name=\"The Elliott Bay Book Company\" />\n        <ListItem name=\"Uwajimaya\" />\n      </section>\n\n      <footer>\n        <p className=\"plus ad\">Photos not available (coming soon)</p>\n      </footer>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}